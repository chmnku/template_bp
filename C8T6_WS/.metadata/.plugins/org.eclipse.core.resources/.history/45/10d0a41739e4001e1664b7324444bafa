/*
 * uart.c
 *
 *  Created on: Mar 17, 2024
 *      Author: chmnku
 */


#include "uart.h"

static bool is_open[UART_MAX_CH];



bool uartInit(void)
{
  for (int i = 0; i < UART_MAX_CH; i++)
  {
    is_open[i] = false;
  }
}

bool uartOpen(uint8_t ch, uint32_t baud)
{
  bool ret = false;

  switch(ch)
  {
    case _DEF_UART1:
      is_open[ch] = true;
      ret = true;
      break;
  }


  return ret;
}

uint32_t uartAvailable(uint8_t ch)
{
 uint32_t ret = 0;

 switch(ch)
 {
   case _DEF_UART1:
     ret = cdcAvailable();
     break;
 }

 return ret;
}

uint8_t uartRead(uint8_t ch)
{
  uint8_t ret = 0;

  switch(ch)
  {
    case _DEF_UART1:
      ret = cdcRead();
      break;
  }

  return ret;
}

uint32_t uartWrite(uint_t ch, uint8_t *p_data, uint32_t length)
{
  uint32_t ret = 0;

  switch(ch)
  {
    case _DEF_UART1:
      ret = cdcWrite(p_dat, length);
  }

  return ret;
}

uint32_t uartPrintf(uint8_t ch, char *fmt, ...)
{
  char buf[256];
  va_list args;
  int len;

  va_start(args, fmt);
  len = vsnprintf(buf, 256, fmt, args);

  uartWrite(ch, buf, len);

  va_end(args);


}
